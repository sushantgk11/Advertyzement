{"version":3,"sources":["logo.svg","Components/Navbar.jsx","Components/Card.jsx","Components/Userprofile.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","id","onClick","getUser","Card","props","className","src","imgURL","alt","firstName","lastName","email","Userprofile","useState","userData","setuserData","isLoading","setLoading","fetch","then","response","json","data","type","color","height","width","map","val","avatar","first_name","last_name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,I,iDCaAA,MATf,SAAgBC,GACZ,OAAO,mCAAE,gCACL,uCACA,6BACG,wBAAQC,GAAG,UAAUC,QAASF,EAAKG,QAAnC,+B,MCgBIC,MArBf,SAAcC,GACd,OAAO,mCACH,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,OAEhC,sBAAKH,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,UACKD,EAAMK,UADX,IACuBL,EAAMM,YAE7B,sBAAKL,UAAU,YAAf,UACI,sCAASD,EAAMJ,MACf,yCAAW,+BAAOI,EAAMO,WACxB,wBAAQN,UAAU,UAAlB,sCCqBDO,MA9Bf,WAEA,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KAOA,OAAQ,sBAAKZ,UAAU,OAAf,UACA,cAAC,EAAD,CAAQH,QANhB,WACIe,GAAW,GACXC,MAAM,sCAAsCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAASP,EAAYO,GAAML,GAAW,SAKrH,qBAAKZ,UAAU,iBAAf,SACgB,GAAXW,EACD,qBAAKX,UAAU,SAAf,SACI,cAAC,IAAD,CAAckB,KAAM,kBAAmBC,MAAO,OAAQC,OAAQ,KAAMC,MAAO,SAC5D,MAAVZ,EACTA,EAASQ,KAAKK,KAAI,SAACC,GACd,OAAO,mCAAE,cAAC,EAAD,CAAMrB,OAAQqB,EAAIC,OACZ7B,GAAI4B,EAAI5B,GACRS,UAAWmB,EAAIE,WACfpB,SAAUkB,EAAIG,UACdpB,MAAOiB,EAAIjB,aAEhB,SCrBZqB,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eea063df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Navbar.css';\r\n// import '../../node_modules/font-awesome/css/font-awesome.min.css'; \r\n\r\nfunction Navbar(prop){\r\n    return(<><nav>\r\n        <span>SGK</span>\r\n        <ul>\r\n           <button id=\"getUser\" onClick={prop.getUser}>Get Users</button>\r\n        </ul>\r\n    </nav></>)\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props){\r\nreturn(<>\r\n    <div className=\"card\">\r\n        <div className=\"card-image\">\r\n            <img src={props.imgURL} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-body\">\r\n            <h3 className=\"card-title\">\r\n                {props.firstName} {props.lastName}\r\n            </h3>\r\n            <div className=\"card-text\">\r\n                <p>ID : {props.id}</p>\r\n                <p>Email : <span>{props.email}</span></p>\r\n                <button className=\"viewBtn\">View Profile</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>)\r\n\r\n}\r\n\r\nexport default Card","import React, { useState } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport \"./Userprofile.css\"; \r\nimport Navbar from './Navbar';\r\nimport Card from './Card';\r\n\r\n\r\nfunction Userprofile(){\r\n\r\nconst [userData, setuserData] = useState(null)\r\nconst [isLoading, setLoading] = useState(false);\r\n\r\nfunction getUserData(){\r\n    setLoading(true);\r\n    fetch('https://reqres.in/api/users?page=1').then(response => response.json()).then(data => {setuserData(data);setLoading(false)})   \r\n}\r\n\r\nreturn (<div className=\"main\">\r\n        <Navbar getUser={getUserData}/>\r\n        <div className=\"card-container\">\r\n            {isLoading==true ? \r\n            <div className=\"loader\">\r\n                <ReactLoading type={\"spinningBubbles\"} color={\"blue\"} height={'5%'} width={'5%'} /> \r\n            </div> : userData!=null ? \r\n            userData.data.map((val)=>{\r\n                 return(<><Card imgURL={val.avatar} \r\n                                id={val.id} \r\n                                firstName={val.first_name} \r\n                                lastName={val.last_name} \r\n                                email={val.email}/> \r\n                        </>)\r\n                        }):\"\" \r\n            }\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Userprofile;","import logo from './logo.svg';\nimport './App.css';\nimport Userprofile from './Components/Userprofile';\n\nfunction App() {\n  return (\n    <Userprofile />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}